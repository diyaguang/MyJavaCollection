@Configuration
@Aspect
public class AOPConfig{
	@Around("@within(org.springframework.stereotype.Controller)")
	public Object simpleAop(final ProceedingJoinPoint pjp) throw Throwable{
		try{
			Object[] args = pjp.getArgs();
			System.out.println("args:"+Arrays.asList(args));
			Object o = pjp.proceed();
			System.out.println("return :"+o);
			return o;
		}catch(Throwable e){
			throw e;
		}
}
@Configuration 声明是一个 Spring管理配置Bean
@Aspect，这是一个切面类
@Around 声明一个表达式，要织入目标的特性（也就是确定织入的目标）
sompleAop是织入的代码
pjp.proceed() 切面操作代码执行完毕后，继续执行应用的代码，调用原有的逻辑。

其中 Spring AOP 支持多种表达式及表达式的组合：
execution(public * *(..)) 面向所有的 public 方法，
execution(* set*(..))  所有以set开头的方法
execution(public set*(..))  所有以set开头的public 方法
execution(public com.xyz.service.* set*(..))  所有set开头的public方法，且位于 com.xyz.service 包下
target(com.xyz.service.CommonService)  所有实现了 CommonService 接口的类的方法
@target(org.springframework.transaction.annotation.Transactional)  所有用@Transactional注解的方法
@within(org.springframework.stereotype.Controller)  类型声明了 @Controller 的所有方法

